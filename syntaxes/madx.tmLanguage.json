{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "MadX",
  "scopeName": "source.madx",
  "patterns": [
    { "include": "#comments" },
    { "include": "#numbers" },
    { "include": "#particles" },
    { "include": "#types" },
    { "include": "#operators" },
    { "include": "#controls" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#objects" },
    { "include": "#internals" },
    { "include": "#math" },
    { "include": "#macros" },
    { "include": "#strings" },
    { "include": "#block" }
  ],
  "repository": {
    "attributes": {
      "patterns": [
        { "include" : "#attributes-stringval" },
        { "include" : "#attributes-singular" },
        { "include" : "#attributes-default" }
      ]
    },
    "attributes-stringval": {
      "patterns": [
        {
          "match": "(?xi)\\b(clist|file|format|halofile|mlist|sectorfile|offsetelem|trueprofile)\\s*(=)\\s*(.+?)\\s*(?=[,;\\s])",
          "captures": {
            "1": {"name": "variable.other.attribute.madx"},
            "2": {"name": "punctuation.madx"},
            "3": {"name": "string.unquoted.format.madx"}
          }
        }
      ]
    },
    "attributes-singular": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(bborbit|bunched|cavall|chrom|clear|debug|echo|echomacro|full|info|no_fatal_stop|radiate|rbarc|reset|rmatrix|sympl|tell|thick|thin_foc|threader|trace|truncate|twiss_print|verbose|verify|warn)\\b",
          "name": "variable.other.attribute.madx"
        }
      ]
    },
    "attributes-default": {
      "patterns": [
        {
          "match": "(?xi)\\b([a-zA-Z]?[a-zA-Z0-9_]*)\\s*(=)",
          "captures": {
            "1": {"name": "variable.other.attribute.madx"},
            "2": {"name": "punctuation.madx"}
          }
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "begin": "(?xi)\\b(?<!\\.)(table|tabindex|tabstring|gettab|getidx)(\\s*\\()",
          "beginCaptures": {
            "1": {"name": "support.function.madx"},
            "2": {"name": "punctuation.madx"}
          },
          "patterns": [
            { "include": "#innards" }
          ],
          "end": "\\)",
          "endCaptures": {
            "0": {"name": "punctuation.madx"}
          }
        }
      ]
    },
    "innards": {
      "patterns": [
        { "include": "#numbers" },
        { "include": "#operators" },
        { "include": "#keywords" },
        { "include": "#objects" },
        { "include": "#internals" },
        { "include": "#math" },
        { "include": "#strings" }
      ]
    },
    "macros": {
      "patterns": [
        { "include": "#macrodef-input" },
        { "include": "#macrodef-noinput" }
      ]
    },
    "macrodef-input": {
      "patterns": [
        {
          "begin": "(?xi)\\b([a-zA-Z_][a-zA-Z0-9_]*)(\\s*\\()(?=.*\\)\\s*:\\s*macro)",
          "beginCaptures": {
            "1": {"name": "entity.name.function.macro.input.madx"},
            "2": {"name": "punctuation.madx"}
          },
          "end": "\\)",
          "endCaptures": {
            "0": {"name": "punctuation.madx"}
          },
          "patterns": [
            { "include": "#internals" },
            { "include": "#numbers" },
            { "include": "#strings" }
          ]
        }
      ]
    },
    "macrodef-noinput": {
      "patterns": [
        {
          "match": "(?xi)\\b([a-zA-Z]?[a-zA-Z0-9_]*)\\s*(:)\\s*(?=macro)",
          "captures": {
            "1": {"name": "entity.name.function.macro.noinput.madx"},
            "2": {"name": "punctuation.madx"}
          }
        }
      ]
    },
    "objects": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(beam)(?=%|->)\\b",
          "name": "support.class.madx"
        }
      ]
    },
    "internals": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(pi|twopi|degrad|raddeg|e|emass|pmass|nmass|mumass|clight|qelect|hbar|erad|prad)(?!\\.)\\b",
          "name": "constant.language.madx"
        },
        {
          "match": "(?xi)\\b(?<!\\.)(aperture|twiss|beam|summ)\\b",
          "name": "variable.language.internal.madx"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "(?i)\\b(?<!\\.)(if|elseif|else|while)\\b",
          "name": "keyword.control.conditional.madx"
        },
        {
          "match": "(?i)\\b(?<!\\.)(macro)(?=\\s*=)\\b",
          "name": "keyword.control.macro.madx"
        },
        {
          "match": "(?i)\\b(?<!\\.)(clear|endedit|endmatch|exit|flatten|quit|reflect|stop|survey|twiss)\\b",
          "name": "keyword.control.command.madx"
        }
      ]
    },
    "controls": {
      "patterns": [
        {
          "begin": "(?xi)\\b(?<!\\.)(exec)(\\s*[\\,\\s])([a-zA-Z]?[a-zA-Z0-9_]*)(\\s*\\()",
          "beginCaptures": {
            "1": {"name": "keyword.control.madx"},
            "2": {"name": "punctuation.madx"},
            "3": {"name": "entity.name.function.macro.input.madx"},
            "4": {"name": "punctuation.madx"}
          },
          "end": "\\)\\s*;",
          "endCaptures": {
            "0": {"name": "punctuation.madx"}
          },
          "patterns": [
            { "include": "#internals" },
            { "include": "#functions" },
            { "include": "#objects" },
            { "include": "#math" },
            { "include": "#particles" },
            { "include": "#numbers" },
            { "include": "#strings" }
          ]
        },
        {
          "begin": "(?xi)\\b(?<!\\.)(aperture|assign|beam|call|coguess|constraint|copyfile|clear|create|cycle|delete|dumpsequ|emit|exec|extract|fill|fill_knob|global|gweight|help|install|jacobian|lmdif|makethin|match|migrad|move|option|plot|print|printf|readmytable|readtable|remove|removefile|renamefile|replace|resbeam|resplot|save|savebeta|select|set|setvars|setvars_const|setvars_knob|setvars_lin|seqedit|show|shrink|simplex|sixtrack|sxfread|sxfwrite|survey|system|title|twiss|use|use_macro|write|value|vary|weight)(\\s*[\\,\\s])",
          "beginCaptures": {
            "1": {"name": "keyword.control.madx"},
            "2": {"name": "punctuation.madx"}
          },
          "end": ";",
          "endCaptures": {
            "0": {"name": "punctuation.madx"}
          },
          "patterns": [
            { "include": "#attributes" },
            { "include": "#flags" },
            { "include": "#internals" },
            { "include": "#functions" },
            { "include": "#objects" },
            { "include": "#math" },
            { "include": "#particles" },
            { "include": "#numbers" },
            { "include": "#strings" }
          ]
        }
      ]
    },
    "flags": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(error|makethin|save|sectormap|seqedit)\\b",
          "name": "constant.flag.madx"
        }
      ]
    },
    "particles": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(positron|electron|proton|antiproton|posmuon|negmuon|ion)\\b",
          "name": "constant.numeric.particle.madx"
        }
      ]
    },
    "math": {
      "patterns": [
        {
          "match": "(?xi)\\b(?<!\\.)(sqrt|log|log10|exp|sin|cos|tan|asin|acos|atan|sinh|cosh|tanh|sinc|abs|erf|erfc|floor|ceil|round|frac|ranf|gauss|tgauss)\\b",
          "name": "support.function.madx"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.madx",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.madx",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.madx",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.madx",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b(?<!\\.)([0-9]+\\.{1}[0-9]*)([eEdD]{1}[\\-|\\+]?[0-9]+)?\\b",
          "captures": {
            "1": {"name": "constant.numeric.float.madx"},
            "2": {"name": "constant.numeric.exponential.madx"}
          }
        },
        {
          "match": "\\b(?<!\\.)([0-9]+)([eEdD]{1}[\\-|\\+]?[0-9]+)?\\b",
          "captures": {
            "1": {"name": "constant.numeric.integer.madx"},
            "2": {"name": "constant.numeric.exponential.madx"}
          }
        },
        {
          "match": "\\b(?<!\\.)(true|false)\\b",
          "captures": {
            "1": {"name": "constant.numeric.boolean.madx"}
          }
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "!",
          "end": "\\n",
          "name": "comment.line.madx"
        },
        {
          "begin": "//",
          "end": "\\n",
          "name": "comment.line.madx"
        },
        {
          "begin": "/\\*",
          "beginCaptures": {
            "0": {"name": "punctuation.definition.comment.begin.madx"}
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {"name": "punctuation.definition.comment.end.madx"}
          },
          "name": "comment.block.madx"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "match": "(?i)\\b(?<!\\.)(const)\\b",
          "name": "storage.modifier.madx"
        },
        {
          "match": "(?i)\\b(?<!\\.)(real|int)\\b",
          "name": "storage.type.madx"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "==|<>|<|>|<=|=>",
          "name": "keyword.operator.comparison.madx"
        }
      ]
    }
  }
}